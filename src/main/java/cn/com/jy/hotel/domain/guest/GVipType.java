package cn.com.jy.hotel.domain.guest;

// Generated 2016-4-14 2:43:54 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * GVipType generated by hbm2java
 */
@Entity
@Table(name = "g_vip_type", catalog = "hotel", uniqueConstraints = @UniqueConstraint(columnNames = "vip_type_name"))
public class GVipType implements java.io.Serializable {

	private Short id;
	private String vipTypeName;
	private byte vipDiscount;
	private String description;
	private Set<GVip> GVips = new HashSet<GVip>(0);

	public GVipType() {
	}

	public GVipType(String vipTypeName, byte vipDiscount) {
		this.vipTypeName = vipTypeName;
		this.vipDiscount = vipDiscount;
	}

	public GVipType(String vipTypeName, byte vipDiscount, String description,
			Set<GVip> GVips) {
		this.vipTypeName = vipTypeName;
		this.vipDiscount = vipDiscount;
		this.description = description;
		this.GVips = GVips;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Short getId() {
		return this.id;
	}

	public void setId(Short id) {
		this.id = id;
	}

	@Column(name = "vip_type_name", unique = true, nullable = false, length = 64)
	public String getVipTypeName() {
		return this.vipTypeName;
	}

	public void setVipTypeName(String vipTypeName) {
		this.vipTypeName = vipTypeName;
	}

	@Column(name = "vip_discount", nullable = false)
	public byte getVipDiscount() {
		return this.vipDiscount;
	}

	public void setVipDiscount(byte vipDiscount) {
		this.vipDiscount = vipDiscount;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "GVipType")
	public Set<GVip> getGVips() {
		return this.GVips;
	}

	public void setGVips(Set<GVip> GVips) {
		this.GVips = GVips;
	}

}
