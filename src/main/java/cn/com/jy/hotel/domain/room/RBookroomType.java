package cn.com.jy.hotel.domain.room;

// Generated 2016-4-14 2:43:54 by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * RBookroomType generated by hbm2java
 */
@Entity
@Table(name = "r_bookroom_type", catalog = "hotel")
public class RBookroomType implements java.io.Serializable {

	private Long id;
	private RBookroom RBookroom;
	private short roomTypeId;
	private short roomTypeCount;
	private Set<RBookroomDetail> RBookroomDetails = new HashSet<RBookroomDetail>(
			0);

	public RBookroomType() {
	}

	public RBookroomType(RBookroom RBookroom, short roomTypeId,
			short roomTypeCount) {
		this.RBookroom = RBookroom;
		this.roomTypeId = roomTypeId;
		this.roomTypeCount = roomTypeCount;
	}

	public RBookroomType(RBookroom RBookroom, short roomTypeId,
			short roomTypeCount, Set<RBookroomDetail> RBookroomDetails) {
		this.RBookroom = RBookroom;
		this.roomTypeId = roomTypeId;
		this.roomTypeCount = roomTypeCount;
		this.RBookroomDetails = RBookroomDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "bookroom_id", nullable = false)
	public RBookroom getRBookroom() {
		return this.RBookroom;
	}

	public void setRBookroom(RBookroom RBookroom) {
		this.RBookroom = RBookroom;
	}

	@Column(name = "room_type_id", nullable = false)
	public short getRoomTypeId() {
		return this.roomTypeId;
	}

	public void setRoomTypeId(short roomTypeId) {
		this.roomTypeId = roomTypeId;
	}

	@Column(name = "room_type_count", nullable = false)
	public short getRoomTypeCount() {
		return this.roomTypeCount;
	}

	public void setRoomTypeCount(short roomTypeCount) {
		this.roomTypeCount = roomTypeCount;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "RBookroomType")
	public Set<RBookroomDetail> getRBookroomDetails() {
		return this.RBookroomDetails;
	}

	public void setRBookroomDetails(Set<RBookroomDetail> RBookroomDetails) {
		this.RBookroomDetails = RBookroomDetails;
	}

}
