package cn.com.jy.hotel.domain.room;

// Generated 2016-4-14 2:43:54 by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import cn.com.jy.hotel.domain.guest.GGuestRoomDetail;

/**
 * RRoomPayMethod generated by hbm2java
 */
@Entity
@Table(name = "r_room_pay_method", catalog = "hotel", uniqueConstraints = @UniqueConstraint(columnNames = "pay_method_name"))
public class RRoomPayMethod implements java.io.Serializable {

	private Short id;
	private RRoomType RRoomType;
	private String payMethodName;
	private Integer startupTime;
	private BigDecimal startupPrice;
	private Integer standardTime;
	private BigDecimal standardPrice;
	private Integer minTime;
	private BigDecimal minPrice;
	private Byte status;
	private byte payType;
	private Date checkInTime;
	private Date checkOutTime;
	private BigDecimal dayPrice;
	private Set<GGuestRoomDetail> GGuestRoomDetails = new HashSet<GGuestRoomDetail>(
			0);

	public RRoomPayMethod() {
	}

	public RRoomPayMethod(RRoomType RRoomType, String payMethodName,
			byte payType) {
		this.RRoomType = RRoomType;
		this.payMethodName = payMethodName;
		this.payType = payType;
	}

	public RRoomPayMethod(RRoomType RRoomType, String payMethodName,
			Integer startupTime, BigDecimal startupPrice, Integer standardTime,
			BigDecimal standardPrice, Integer minTime, BigDecimal minPrice,
			Byte status, byte payType, Date checkInTime, Date checkOutTime,
			BigDecimal dayPrice, Set<GGuestRoomDetail> GGuestRoomDetails) {
		this.RRoomType = RRoomType;
		this.payMethodName = payMethodName;
		this.startupTime = startupTime;
		this.startupPrice = startupPrice;
		this.standardTime = standardTime;
		this.standardPrice = standardPrice;
		this.minTime = minTime;
		this.minPrice = minPrice;
		this.status = status;
		this.payType = payType;
		this.checkInTime = checkInTime;
		this.checkOutTime = checkOutTime;
		this.dayPrice = dayPrice;
		this.GGuestRoomDetails = GGuestRoomDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Short getId() {
		return this.id;
	}

	public void setId(Short id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "room_type_id", nullable = false)
	public RRoomType getRRoomType() {
		return this.RRoomType;
	}

	public void setRRoomType(RRoomType RRoomType) {
		this.RRoomType = RRoomType;
	}

	@Column(name = "pay_method_name", unique = true, nullable = false, length = 64)
	public String getPayMethodName() {
		return this.payMethodName;
	}

	public void setPayMethodName(String payMethodName) {
		this.payMethodName = payMethodName;
	}

	@Column(name = "startupTime")
	public Integer getStartupTime() {
		return this.startupTime;
	}

	public void setStartupTime(Integer startupTime) {
		this.startupTime = startupTime;
	}

	@Column(name = "startupPrice", precision = 11)
	public BigDecimal getStartupPrice() {
		return this.startupPrice;
	}

	public void setStartupPrice(BigDecimal startupPrice) {
		this.startupPrice = startupPrice;
	}

	@Column(name = "standardTime")
	public Integer getStandardTime() {
		return this.standardTime;
	}

	public void setStandardTime(Integer standardTime) {
		this.standardTime = standardTime;
	}

	@Column(name = "standardPrice", precision = 11)
	public BigDecimal getStandardPrice() {
		return this.standardPrice;
	}

	public void setStandardPrice(BigDecimal standardPrice) {
		this.standardPrice = standardPrice;
	}

	@Column(name = "minTime")
	public Integer getMinTime() {
		return this.minTime;
	}

	public void setMinTime(Integer minTime) {
		this.minTime = minTime;
	}

	@Column(name = "minPrice", precision = 11)
	public BigDecimal getMinPrice() {
		return this.minPrice;
	}

	public void setMinPrice(BigDecimal minPrice) {
		this.minPrice = minPrice;
	}

	@Column(name = "status")
	public Byte getStatus() {
		return this.status;
	}

	public void setStatus(Byte status) {
		this.status = status;
	}

	@Column(name = "payType", nullable = false)
	public byte getPayType() {
		return this.payType;
	}

	public void setPayType(byte payType) {
		this.payType = payType;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "checkInTime", length = 19)
	public Date getCheckInTime() {
		return this.checkInTime;
	}

	public void setCheckInTime(Date checkInTime) {
		this.checkInTime = checkInTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CheckOutTime", length = 19)
	public Date getCheckOutTime() {
		return this.checkOutTime;
	}

	public void setCheckOutTime(Date checkOutTime) {
		this.checkOutTime = checkOutTime;
	}

	@Column(name = "dayPrice", precision = 11)
	public BigDecimal getDayPrice() {
		return this.dayPrice;
	}

	public void setDayPrice(BigDecimal dayPrice) {
		this.dayPrice = dayPrice;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "RRoomPayMethod")
	public Set<GGuestRoomDetail> getGGuestRoomDetails() {
		return this.GGuestRoomDetails;
	}

	public void setGGuestRoomDetails(Set<GGuestRoomDetail> GGuestRoomDetails) {
		this.GGuestRoomDetails = GGuestRoomDetails;
	}

}
