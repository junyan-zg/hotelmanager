<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.jy.hotel.dao.system.SysOperatorLogMapper" >
  <resultMap id="BaseResultMap" type="cn.com.jy.hotel.domain.system.SysOperatorLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="eventTime" property="eventTime" jdbcType="TIMESTAMP" />
    <result column="ip_address" property="ip_address" jdbcType="VARCHAR" />
    <result column="operator_id" property="operator_id" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.com.jy.hotel.domain.system.SysOperatorLog" extends="BaseResultMap" >
    <result column="description" property="description" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, eventTime, ip_address, operator_id
  </sql>
  <sql id="Blob_Column_List" >
    description
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_operator_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_operator_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.com.jy.hotel.domain.system.SysOperatorLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_operator_log (eventTime, ip_address, operator_id, 
      description)
    values (#{eventTime,jdbcType=TIMESTAMP}, #{ip_address,jdbcType=VARCHAR}, #{operator_id,jdbcType=INTEGER}, 
      #{description,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.jy.hotel.domain.system.SysOperatorLog" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_operator_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventTime != null" >
        eventTime,
      </if>
      <if test="ip_address != null" >
        ip_address,
      </if>
      <if test="operator_id != null" >
        operator_id,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventTime != null" >
        #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip_address != null" >
        #{ip_address,jdbcType=VARCHAR},
      </if>
      <if test="operator_id != null" >
        #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.jy.hotel.domain.system.SysOperatorLog" >
    update sys_operator_log
    <set >
      <if test="eventTime != null" >
        eventTime = #{eventTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip_address != null" >
        ip_address = #{ip_address,jdbcType=VARCHAR},
      </if>
      <if test="operator_id != null" >
        operator_id = #{operator_id,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.com.jy.hotel.domain.system.SysOperatorLog" >
    update sys_operator_log
    set eventTime = #{eventTime,jdbcType=TIMESTAMP},
      ip_address = #{ip_address,jdbcType=VARCHAR},
      operator_id = #{operator_id,jdbcType=INTEGER},
      description = #{description,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.jy.hotel.domain.system.SysOperatorLog" >
    update sys_operator_log
    set eventTime = #{eventTime,jdbcType=TIMESTAMP},
      ip_address = #{ip_address,jdbcType=VARCHAR},
      operator_id = #{operator_id,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>